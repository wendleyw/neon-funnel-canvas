#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# 🛡️ Pre-commit Security & Quality Checks

echo "🔍 Running pre-commit security checks..."

# 1. TypeScript type checking
echo "📊 Checking TypeScript types..."
npm run type-check || {
  echo "❌ TypeScript errors found. Commit blocked."
  exit 1
}

# 2. ESLint with auto-fix
echo "🧹 Running ESLint with auto-fix..."
npm run lint:fix || {
  echo "❌ ESLint errors found. Commit blocked."
  exit 1
}

# 3. Security tests
echo "🛡️ Running security tests..."
npm run test:security || {
  echo "❌ Security tests failed. Commit blocked."
  exit 1
}

# 4. Dependency audit
echo "🔍 Checking for security vulnerabilities..."
npm audit --audit-level moderate || {
  echo "❌ Security vulnerabilities found. Run 'npm audit fix' and try again."
  exit 1
}

# 5. Check for sensitive data
echo "🔐 Scanning for sensitive data..."
if grep -r --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" -E "(password|secret|key|token).*=.*['\"][^'\"]{8,}" src/ server/ 2>/dev/null; then
  echo "❌ Potential sensitive data found in code. Please review and use environment variables."
  exit 1
fi

# 6. Check for console.log in production code
echo "🚫 Checking for console.log statements..."
if grep -r --include="*.ts" --include="*.tsx" --exclude-dir=tests "console\." src/ server/ 2>/dev/null; then
  echo "⚠️  console.log statements found. Consider using proper logging in production."
  # Don't block, just warn
fi

# 7. Check bundle size impact (if dist exists)
if [ -d "dist" ]; then
  echo "📦 Checking bundle size..."
  BUNDLE_SIZE=$(du -sk dist 2>/dev/null | cut -f1 || echo "0")
  if [ "$BUNDLE_SIZE" -gt 512 ]; then
    echo "⚠️  Bundle size is ${BUNDLE_SIZE}KB. Consider optimization if > 512KB."
  fi
fi

echo "✅ All pre-commit checks passed! Proceeding with commit..." 